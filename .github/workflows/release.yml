name: Release and Publish to NuGet

# –≠—Ç–æ—Ç workflow –ø—É–±–ª–∏–∫—É–µ—Ç –¥–≤–∞ –ø–∞–∫–µ—Ç–∞:
# - StableDiffusionNet.Core (–±–∞–∑–æ–≤–∞—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –±–µ–∑ DI)
# - StableDiffusionNet.DependencyInjection (—Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è –¥–ª—è DI)

on:
  push:
    tags:
      - 'v*.*.*'  # –¢—Ä–∏–≥–≥–µ—Ä –Ω–∞ —Ç–µ–≥–∏ –≤–∏–¥–∞ v1.0.0, v2.1.3, –∏ —Ç.–¥.

env:
  DOTNET_VERSION: '8.0.x'
  CORE_PROJECT_PATH: 'StableDiffusionNet.Core/StableDiffusionNet.Core.csproj'
  DI_PROJECT_PATH: 'StableDiffusionNet.DependencyInjection/StableDiffusionNet.DependencyInjection.csproj'
  PACKAGE_OUTPUT_DIR: ${{ github.workspace }}/output

jobs:
  build-test-release:
    name: Build, Test, and Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # –ü–æ–ª–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Ä–∞–±–æ—Ç—ã GitVersion
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    
    - name: Get version from tag
      id: get_version
      run: |
        TAG=${GITHUB_REF#refs/tags/v}
        echo "VERSION=$TAG" >> $GITHUB_OUTPUT
        echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        echo "Version: $TAG"
    
    - name: Generate Release Notes
      id: release_notes
      run: |
        # –ü–æ–ª—É—á–∏—Ç—å –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ç–µ–≥
        PREV_TAG=$(git describe --abbrev=0 --tags $(git rev-list --tags --skip=1 --max-count=1) 2>/dev/null || echo "")
        
        if [ -z "$PREV_TAG" ]; then
          # –ü–µ—Ä–≤—ã–π —Ä–µ–ª–∏–∑ - –≤—Å–µ –∫–æ–º–º–∏—Ç—ã
          COMMITS=$(git log --pretty=format:"- %s (%h)" --no-merges)
        else
          # –ö–æ–º–º–∏—Ç—ã —Å –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Ç–µ–≥–∞
          COMMITS=$(git log ${PREV_TAG}..HEAD --pretty=format:"- %s (%h)" --no-merges)
        fi
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Ñ–∞–π–ª
        if [ -z "$PREV_TAG" ]; then
          # –ü–µ—Ä–≤—ã–π —Ä–µ–ª–∏–∑
          cat << EOF > release_notes.md
        ## üéâ StableDiffusionNet ${{ steps.get_version.outputs.TAG_NAME }}
        
        ### üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞
        
        **–î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–µ–∑ DI:**
        \`\`\`bash
        dotnet add package StableDiffusionNet.Core --version ${{ steps.get_version.outputs.VERSION }}
        \`\`\`
        
        **–î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Å DI (ASP.NET Core):**
        \`\`\`bash
        dotnet add package StableDiffusionNet.DependencyInjection --version ${{ steps.get_version.outputs.VERSION }}
        \`\`\`
        
        ### ‚ú® –ò–∑–º–µ–Ω–µ–Ω–∏—è –≤ —ç—Ç–æ–º —Ä–µ–ª–∏–∑–µ
        
        ${COMMITS}
        
        ### üîó –ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏
        - [StableDiffusionNet.Core on NuGet](https://www.nuget.org/packages/StableDiffusionNet.Core/${{ steps.get_version.outputs.VERSION }})
        - [StableDiffusionNet.DependencyInjection on NuGet](https://www.nuget.org/packages/StableDiffusionNet.DependencyInjection/${{ steps.get_version.outputs.VERSION }})
        - [–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è](https://github.com/${{ github.repository }}/blob/master/README.md)
        - [–í—Å–µ —Ä–µ–ª–∏–∑—ã](https://github.com/${{ github.repository }}/releases)
        EOF
        else
          # –ü–æ—Å–ª–µ–¥—É—é—â–∏–µ —Ä–µ–ª–∏–∑—ã
          cat << EOF > release_notes.md
        ## üéâ StableDiffusionNet ${{ steps.get_version.outputs.TAG_NAME }}
        
        ### üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞
        
        **–î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–µ–∑ DI:**
        \`\`\`bash
        dotnet add package StableDiffusionNet.Core --version ${{ steps.get_version.outputs.VERSION }}
        \`\`\`
        
        **–î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Å DI (ASP.NET Core):**
        \`\`\`bash
        dotnet add package StableDiffusionNet.DependencyInjection --version ${{ steps.get_version.outputs.VERSION }}
        \`\`\`
        
        ### ‚ú® –ò–∑–º–µ–Ω–µ–Ω–∏—è –≤ —ç—Ç–æ–º —Ä–µ–ª–∏–∑–µ
        
        ${COMMITS}
        
        ### üîó –ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏
        - [StableDiffusionNet.Core on NuGet](https://www.nuget.org/packages/StableDiffusionNet.Core/${{ steps.get_version.outputs.VERSION }})
        - [StableDiffusionNet.DependencyInjection on NuGet](https://www.nuget.org/packages/StableDiffusionNet.DependencyInjection/${{ steps.get_version.outputs.VERSION }})
        - [–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è](https://github.com/${{ github.repository }}/blob/master/README.md)
        - [–í—Å–µ —Ä–µ–ª–∏–∑—ã](https://github.com/${{ github.repository }}/releases)
        
        ---
        **–ü–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∏–∑–º–µ–Ω–µ–Ω–∏–π**: https://github.com/${{ github.repository }}/compare/${PREV_TAG}...${{ steps.get_version.outputs.TAG_NAME }}
        EOF
        fi
        
        echo "PREV_TAG=${PREV_TAG}" >> $GITHUB_OUTPUT
    
    - name: Restore dependencies
      run: dotnet restore
    
    - name: Build solution
      run: |
        dotnet build --configuration Release --no-restore \
          /p:Version=${{ steps.get_version.outputs.VERSION }}
    
    - name: Run unit tests
      run: dotnet test --configuration Release --no-build --verbosity minimal --filter "FullyQualifiedName!~Integration"
    
    - name: Pack NuGet packages
      run: |
        # Pack Core package
        dotnet pack ${{ env.CORE_PROJECT_PATH }} \
          --configuration Release \
          --no-build \
          --output ${{ env.PACKAGE_OUTPUT_DIR }} \
          /p:Version=${{ steps.get_version.outputs.VERSION }} \
          /p:PackageVersion=${{ steps.get_version.outputs.VERSION }}
        
        # Pack DependencyInjection package
        dotnet pack ${{ env.DI_PROJECT_PATH }} \
          --configuration Release \
          --no-build \
          --output ${{ env.PACKAGE_OUTPUT_DIR }} \
          /p:Version=${{ steps.get_version.outputs.VERSION }} \
          /p:PackageVersion=${{ steps.get_version.outputs.VERSION }}
    
    - name: List output files
      run: ls -la ${{ env.PACKAGE_OUTPUT_DIR }}
    
    - name: Create Release
      uses: softprops/action-gh-release@6da8fa9354ddfdc4aeace5fc48d7f679b5214090
      with:
        tag_name: ${{ steps.get_version.outputs.TAG_NAME }}
        name: Release ${{ steps.get_version.outputs.TAG_NAME }}
        body_path: release_notes.md
        draft: false
        prerelease: false
        files: |
          ${{ env.PACKAGE_OUTPUT_DIR }}/*.nupkg
          ${{ env.PACKAGE_OUTPUT_DIR }}/*.snupkg
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Publish to NuGet
      env:
        NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
      run: |
        dotnet nuget push ${{ env.PACKAGE_OUTPUT_DIR }}/*.nupkg \
          --api-key "$NUGET_API_KEY" \
          --source https://api.nuget.org/v3/index.json \
          --skip-duplicate
    
    - name: Summary
      run: |
        echo "## ‚úÖ Release Published Successfully!" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "- **Version:** ${{ steps.get_version.outputs.VERSION }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Tag:** ${{ steps.get_version.outputs.TAG_NAME }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### üì¶ NuGet Packages:" >> $GITHUB_STEP_SUMMARY
        echo "- **Core:** https://www.nuget.org/packages/StableDiffusionNet.Core/${{ steps.get_version.outputs.VERSION }}" >> $GITHUB_STEP_SUMMARY
        echo "- **DependencyInjection:** https://www.nuget.org/packages/StableDiffusionNet.DependencyInjection/${{ steps.get_version.outputs.VERSION }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "- **Release:** https://github.com/${{ github.repository }}/releases/tag/${{ steps.get_version.outputs.TAG_NAME }}" >> $GITHUB_STEP_SUMMARY

